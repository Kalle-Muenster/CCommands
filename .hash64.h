/*///////////////////////////////////////////////////////////*\
||                                                           ||
||     File:      hash64.h                                   ||
||     Author:    autogenerated                              ||
||     Generated: by Command Generator v.0.1                 ||
||                                                           ||
\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/
#ifndef IncludesFor_hash64
#define IncludesFor_hash64 (1)


#include "C:\LIBRARIES\INCLUDES\GeneralHashFunctions.h"

#define WITH_JUNKYARD
#define WITH_STRGPOOL
#include ".commandLiner.h"
#include ".byteOrder.h"

typedef ulong(*hash64_SimpleFunction)(const byte*,slong);
typedef ulong(*hash64_SeededFunction)(const byte*,slong,ulong);
typedef struct Hash64Function {
    union {
        ulong(*simple)(const byte*,slong);
        ulong(*seeded)(const byte*,slong,ulong);
    } call;
    union {
        byte Byte[8];
        uint Uint[2];
       slong seed;
    } data;
} Hash64Function;

Hash64Function hash64_SelectFunction( fourCC name, ulong seed );

#define MakeHash64From2xHash32(name) ulong \
hash64_ ## name ## ( const byte* data, slong size ) {\
    if( size < 2 ) {\
        setError( "2 byte minimum", FourCC("zwo") );\
    return 0; }\
    HashValue hash;\
    slong halbe = (size/2);\
    hash.parts[1] = name ## (pool_setb(data,halbe),halbe);\
    data = data+halbe;\
    halbe += size & 1;\
    hash.parts[0] = name ## (pool_setb(data,halbe),halbe);\
    return hash.value;\
}

#ifdef _OnTheFly_
#include ".hash64.cc"
#endif
#endif
