const byte HeaderFile[] = { "\
#ifndef IncludesFor_^COMMANDNAME^\n\
#define IncludesFor_^COMMANDNAME^ (1)\n\
\n\
\n\
^Snipped.WRAPPEDLINE^\n\
\n\
\n\
#ifdef _OnTheFly_\n\
#include \".^COMMANDNAME^.cc\"\n\
#endif\n\
#endif\n\
" };

const byte CodeFile[] = { "\
#ifndef _OnTheFly_\n\
  #include \".^COMMANDNAME^.h\"\n\
#else\n\
  #include <.commandLiner.h>\n\
\n\
  int USAGE(^COMMANDNAME^)\n\
  {\n\
    Synopsis(\"<argument usage>\");\n\n\
    return CheckForError()\n\
        || !hasOption('h');\n\
  }\n\
#endif\n\
\n\
// regular includes here:\n\
#include <stdlib.h>\n\
\n\
//... ...\n\
\n\
#ifdef ^COMMANDNAME^\n\
int main(int argc,char**argv)\n\
{\n\
    if( !InitCommandLiner(argc,argv)\
" };

const byte CodeFileNoSnippedInsert[] = { "\
 ) {\n\
        exit(USAGE(^COMMANDNAME^));\n\
    }\n\n    // Todo: implement command\n\n\
    exit(CheckForError());\n\
" };

const byte CodeFileClose[] = { "\
}\n\n#endif\n\
" };

const byte CallerFile[] = { "\
#define _OnTheFly_ ^COMMANDNAME^\n\
#define ^COMMANDNAME^ \"\"\n\
#include \".^COMMANDNAME^.h\"\n\
int main(int argc,char** argv);\n\
" };


// define generater functions:
void createCommandoHeader( char* outputDir )
{
    char buffer[128]={'\0'};
    strcpy(Tokken[EXTENSION],".h");
    sprintf( &buffer[0],"%s.%s%s", outputDir,
             Tokken[COMMANDNAME], Tokken[EXTENSION] );
    generateFile( HeaderFile, &buffer[0] );
}

void createCommandoCode( char* outputDir, char insertOption )
{
    char buffer[128]={'\0'};
    strcpy(Tokken[EXTENSION],".cc");
    sprintf( &buffer[0],"%s.%s%s", outputDir,
             Tokken[COMMANDNAME], Tokken[EXTENSION] );
    const byte* InsertPart = insertOption == INSERT_SNIPPED
                           ? &HalloWorldSnippet[0]
                           : &CodeFileNoSnippedInsert[0];
    generateFileConditionalInsert( &CodeFile[0],&CodeFileClose[0],
                                   InsertPart, INSERT_SNIPPED,
                                   &buffer[0] );
}

void createCommandoCall(char* outputDir)
{
    char buffer[128]={'\0'};
    strcpy(Tokken[EXTENSION],".c");
    sprintf( &buffer[0],"%s%s%s", outputDir,
             Tokken[COMMANDNAME], Tokken[EXTENSION] );
    generateFileConditionalInsert( "#!/usr/bin/tcc -run -w\n",
                                   CallerFile, InfoHeader,
                                   INSERT_NOINFO, &buffer[0] );
}

void InitCommandoGenerater(void)
{
    if( hasOption('e') ) {
        assignTokken( Tokken, AUTHOR, "autogenerated" );
        assignTokken( Snipped.Tokken, WRAPPEDLINE, HalloWorldIncludes ); 
        noOption('d');
    } else {
		assignTokken( Snipped.Tokken, WRAPPEDLINE, "// ...regular includes here:" );
	}
    assignTokken( Tokken, COMMANDNAME, getName('c') );
    generateHeaderFile = &createCommandoHeader;
    generateCodeFile   = &createCommandoCode;
    generateExtraFile  = &createCommandoCall;
}
